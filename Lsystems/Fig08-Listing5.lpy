#Figure 8: Holonomy and parallel transport using Riemannian Lsystems.

#(a-b) parallel transport of a vector along a polygon made of geodesics. 
#The vector is initially tangent to the first geodesic, then is perpendicular to the tangent on the second geodesic, then points backward on the third geodesic segment. (d-c) parallel transport of a vector not tangent to the first geodesic. The vector keeps a constant angle with the tangent vector, but this angle changes each time the turtle turns. (e-f) parallel transport along a curve that is not a geodesic: the angle between the transporting curve and the transported vector varies continuously.'

from riemann_lsystem.surfaces import *
from riemann_lsystem.riemannianturtle import *
from math import pi

%pastefile ../src/riemann_lsystem/riemannianrules.lpy

R = 1
alpha0 = 0 if PARALLEL else -30     # in degrees
Axiom: 
  nproduce SetSpace(Sphere(R)) _(0.01)
  nproduce [,(0) PlotSpace() ]
  nproduce InitTurtle((0,0,0,1))
  nproduce ParallelTransportReset
  nproduce [,(3) ParallelTransportedArrow(alpha0,0.5) ]
  nproduce Path(R*pi/2) 
  nproduce +(90) Path(R*pi/2) 
  nproduce +(90) Path(R*pi/2) 

derivation length:1
production:
interpretation:
Path(l):
  for i in range(10):
    nproduce F(l/10) [,(3) ParallelTransportedArrow(alpha0,0.5) ]
endlsystem

###### INITIALISATION ######

__lpy_code_version__ = 1.1

def __initialiseContext__(context):
	scalars = [('PARALLEL', 'Bool', True)]
	context["__scalars__"] = scalars
	for s in scalars:
		if not s[1] == "Category" : context[s[0]] = s[2]
